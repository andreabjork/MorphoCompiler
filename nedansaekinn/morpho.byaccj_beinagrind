%{
	import java.io.*;
	import java.util.*;
%}

%left OP1
%right OP2
%left OP3
%left OP4
%left OP5
%left OP6
%left OP7
%token <sval> OP1,OP2,OP3,OP4,OP5,OP6,OP7
%token <sval> LITERAL,NAME
%token IF,ELSE,ELSIF,WHILE,VAR
%token RETURN,AND,OR,NOT
%type <obj> program
%type <obj> function
%type <obj> body,args,arglist,bodyexprs
%type <obj> expr,orexpr,andexpr
%type <obj> notexpr,binopexpr,smallexpr,ifrest
%type <ival> ids,idlist
%type <sval> op,fname

%%

start
	:	program	{ generateProgram($1); }
	;

program
	:	program function		{ ((Vector<Object>)($1)).add($2); $$=$1; }
	|	function				{ $$=new Vector<Object>(); ((Vector<Object>)($$)).add($1); }
	;

function
	:	{
			varCount = 0;
			varTable = new HashMap<String,Integer>();
		}
		fname '(' ids ')' '{' decls exprs '}'
		{
			$$=new Object[]{$2,$4,$7,$8};
		}
	;

...

%%

	private int varCount;
	private HashMap<String,Integer> varTable;
	...

	private void addVar( String name )
	{
		if( varTable.get(name) != null )
			yyerror("Variable already exists");
		varTable.put(name,varCount++);
	}

	private int findVar( String name )
	{
		Integer res = varTable.get(name);
		if( res == null )
			yyerror("Variable does not exist");
		return res;
	}

	int last_token_read,line,column;

	private int yylex()
	{
		int yyl_return = -1;
		try
		{
			yylval = null;
			last_token_read = yyl_return = lexer.yylex();
			line = lexer.getLine()+1;
			column = lexer.getColumn()+1;
			if( yylval==null )
				yylval = new MorphoParserVal(MorphoParser.yyname[yyl_return]);
			//System.out.println("Token: "+MorphoParser.yyname[yyl_return]+" Lexeme: "+yylval.sval);
		}
		catch (IOException e)
		{
			System.err.println("IO error: "+e);
		}
		return yyl_return;
	}

	public void yyerror( String error )
	{
		System.out.println("Error:  "+error);
		System.out.println("Token:  "+MorphoParser.yyname[last_token_read]);
		System.out.println("Line:   "+line);
		System.out.println("Column: "+column);
		System.exit(1);
	}

	public MorphoParser( Reader r )
	{
		lexer = new MorphoLexer(r,this);
	}

	public static void main( String args[] )
	  	throws IOException
	{
		MorphoParser yyparser = new MorphoParser(new FileReader(args[0]));
		name = args[0].substring(0,args[0].lastIndexOf('.'));
		yyparser.yyparse();
	}

	public static void emit( String s )
	{
		System.out.println(s);
	}

	public void generateProgram( Object arg )
	{
		...
	}

	...
