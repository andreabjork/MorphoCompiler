   0  $accept : start $end

   1  start : program

   2  program : program function
   3          | function

   4  $$1 :

   5  function : $$1 fname '(' ids ')' '{' decls exprs '}'

   6  ids :
   7      | ids ',' NAME
   8      | NAME

   9  decls :
  10        | decls decl ';'

  11  decl :
  12       | decl ',' NAME
  13       | VAR NAME

  14  exprs :
  15        | expr exprs

  16  expr : smallexpr op expr
  17       | smallexpr

  18  smallexpr : NAME
  19            | NAME '=' expr
  20            | NAME '(' ids ')'
  21            | RETURN expr
  22            | op expr
  23            | LITERAL
  24            | '(' expr ')'
  25            | ifexpr
  26            | WHILE '(' expr ')' body

  27  op : OPERATOR

  28  fname : NAME

  29  ifexpr : IF '(' expr ')' body elsebody

  30  elsebody :
  31           | ELSIF '(' expr ')' body elsebody
  32           | ELSE body

  33  body : '{' bodyexprs '}'

  34  bodyexprs : bodyexprs expr ';'
  35            | expr ';'

state 0
	$accept : . start $end  (0)
	$$1 : .  (4)

	.  reduce 4

	start  goto 1
	program  goto 2
	function  goto 3
	$$1  goto 4


state 1
	$accept : start . $end  (0)

	$end  accept


state 2
	start : program .  (1)
	program : program . function  (2)
	$$1 : .  (4)

	$end  reduce 1
	NAME  reduce 4

	function  goto 5
	$$1  goto 4


state 3
	program : function .  (3)

	.  reduce 3


state 4
	function : $$1 . fname '(' ids ')' '{' decls exprs '}'  (5)

	NAME  shift 6
	.  error

	fname  goto 7


state 5
	program : program function .  (2)

	.  reduce 2


state 6
	fname : NAME .  (28)

	.  reduce 28


state 7
	function : $$1 fname . '(' ids ')' '{' decls exprs '}'  (5)

	'('  shift 8
	.  error


state 8
	function : $$1 fname '(' . ids ')' '{' decls exprs '}'  (5)
	ids : .  (6)

	NAME  shift 9
	')'  reduce 6
	','  reduce 6

	ids  goto 10


state 9
	ids : NAME .  (8)

	.  reduce 8


state 10
	function : $$1 fname '(' ids . ')' '{' decls exprs '}'  (5)
	ids : ids . ',' NAME  (7)

	')'  shift 11
	','  shift 12
	.  error


state 11
	function : $$1 fname '(' ids ')' . '{' decls exprs '}'  (5)

	'{'  shift 13
	.  error


state 12
	ids : ids ',' . NAME  (7)

	NAME  shift 14
	.  error


state 13
	function : $$1 fname '(' ids ')' '{' . decls exprs '}'  (5)
	decls : .  (9)

	.  reduce 9

	decls  goto 15


state 14
	ids : ids ',' NAME .  (7)

	.  reduce 7


state 15
	function : $$1 fname '(' ids ')' '{' decls . exprs '}'  (5)
	decls : decls . decl ';'  (10)
	decl : .  (11)
	exprs : .  (14)

	OPERATOR  shift 16
	LITERAL  shift 17
	NAME  shift 18
	IF  shift 19
	WHILE  shift 20
	VAR  shift 21
	RETURN  shift 22
	'('  shift 23
	'}'  reduce 14
	','  reduce 11
	';'  reduce 11

	exprs  goto 24
	expr  goto 25
	smallexpr  goto 26
	ifexpr  goto 27
	decl  goto 28
	op  goto 29


state 16
	op : OPERATOR .  (27)

	.  reduce 27


state 17
	smallexpr : LITERAL .  (23)

	.  reduce 23


18: shift/reduce conflict (shift 30, reduce 18) on '('
state 18
	smallexpr : NAME .  (18)
	smallexpr : NAME . '=' expr  (19)
	smallexpr : NAME . '(' ids ')'  (20)

	'('  shift 30
	'='  shift 31
	OPERATOR  reduce 18
	LITERAL  reduce 18
	NAME  reduce 18
	IF  reduce 18
	WHILE  reduce 18
	RETURN  reduce 18
	')'  reduce 18
	'}'  reduce 18
	';'  reduce 18


state 19
	ifexpr : IF . '(' expr ')' body elsebody  (29)

	'('  shift 32
	.  error


state 20
	smallexpr : WHILE . '(' expr ')' body  (26)

	'('  shift 33
	.  error


state 21
	decl : VAR . NAME  (13)

	NAME  shift 34
	.  error


state 22
	smallexpr : RETURN . expr  (21)

	OPERATOR  shift 16
	LITERAL  shift 17
	NAME  shift 18
	IF  shift 19
	WHILE  shift 20
	RETURN  shift 22
	'('  shift 23
	.  error

	expr  goto 35
	smallexpr  goto 26
	ifexpr  goto 27
	op  goto 29


state 23
	smallexpr : '(' . expr ')'  (24)

	OPERATOR  shift 16
	LITERAL  shift 17
	NAME  shift 18
	IF  shift 19
	WHILE  shift 20
	RETURN  shift 22
	'('  shift 23
	.  error

	expr  goto 36
	smallexpr  goto 26
	ifexpr  goto 27
	op  goto 29


state 24
	function : $$1 fname '(' ids ')' '{' decls exprs . '}'  (5)

	'}'  shift 37
	.  error


state 25
	exprs : expr . exprs  (15)
	exprs : .  (14)

	OPERATOR  shift 16
	LITERAL  shift 17
	NAME  shift 18
	IF  shift 19
	WHILE  shift 20
	RETURN  shift 22
	'('  shift 23
	'}'  reduce 14

	exprs  goto 38
	expr  goto 25
	smallexpr  goto 26
	ifexpr  goto 27
	op  goto 29


26: shift/reduce conflict (shift 16, reduce 17) on OPERATOR
state 26
	expr : smallexpr . op expr  (16)
	expr : smallexpr .  (17)

	OPERATOR  shift 16
	LITERAL  reduce 17
	NAME  reduce 17
	IF  reduce 17
	WHILE  reduce 17
	RETURN  reduce 17
	'('  reduce 17
	')'  reduce 17
	'}'  reduce 17
	';'  reduce 17

	op  goto 39


state 27
	smallexpr : ifexpr .  (25)

	.  reduce 25


state 28
	decls : decls decl . ';'  (10)
	decl : decl . ',' NAME  (12)

	','  shift 40
	';'  shift 41
	.  error


state 29
	smallexpr : op . expr  (22)

	OPERATOR  shift 16
	LITERAL  shift 17
	NAME  shift 18
	IF  shift 19
	WHILE  shift 20
	RETURN  shift 22
	'('  shift 23
	.  error

	expr  goto 42
	smallexpr  goto 26
	ifexpr  goto 27
	op  goto 29


state 30
	smallexpr : NAME '(' . ids ')'  (20)
	ids : .  (6)

	NAME  shift 9
	')'  reduce 6
	','  reduce 6

	ids  goto 43


state 31
	smallexpr : NAME '=' . expr  (19)

	OPERATOR  shift 16
	LITERAL  shift 17
	NAME  shift 18
	IF  shift 19
	WHILE  shift 20
	RETURN  shift 22
	'('  shift 23
	.  error

	expr  goto 44
	smallexpr  goto 26
	ifexpr  goto 27
	op  goto 29


state 32
	ifexpr : IF '(' . expr ')' body elsebody  (29)

	OPERATOR  shift 16
	LITERAL  shift 17
	NAME  shift 18
	IF  shift 19
	WHILE  shift 20
	RETURN  shift 22
	'('  shift 23
	.  error

	expr  goto 45
	smallexpr  goto 26
	ifexpr  goto 27
	op  goto 29


state 33
	smallexpr : WHILE '(' . expr ')' body  (26)

	OPERATOR  shift 16
	LITERAL  shift 17
	NAME  shift 18
	IF  shift 19
	WHILE  shift 20
	RETURN  shift 22
	'('  shift 23
	.  error

	expr  goto 46
	smallexpr  goto 26
	ifexpr  goto 27
	op  goto 29


state 34
	decl : VAR NAME .  (13)

	.  reduce 13


state 35
	smallexpr : RETURN expr .  (21)

	.  reduce 21


state 36
	smallexpr : '(' expr . ')'  (24)

	')'  shift 47
	.  error


state 37
	function : $$1 fname '(' ids ')' '{' decls exprs '}' .  (5)

	.  reduce 5


state 38
	exprs : expr exprs .  (15)

	.  reduce 15


state 39
	expr : smallexpr op . expr  (16)

	OPERATOR  shift 16
	LITERAL  shift 17
	NAME  shift 18
	IF  shift 19
	WHILE  shift 20
	RETURN  shift 22
	'('  shift 23
	.  error

	expr  goto 48
	smallexpr  goto 26
	ifexpr  goto 27
	op  goto 29


state 40
	decl : decl ',' . NAME  (12)

	NAME  shift 49
	.  error


state 41
	decls : decls decl ';' .  (10)

	.  reduce 10


state 42
	smallexpr : op expr .  (22)

	.  reduce 22


state 43
	ids : ids . ',' NAME  (7)
	smallexpr : NAME '(' ids . ')'  (20)

	')'  shift 50
	','  shift 12
	.  error


state 44
	smallexpr : NAME '=' expr .  (19)

	.  reduce 19


state 45
	ifexpr : IF '(' expr . ')' body elsebody  (29)

	')'  shift 51
	.  error


state 46
	smallexpr : WHILE '(' expr . ')' body  (26)

	')'  shift 52
	.  error


state 47
	smallexpr : '(' expr ')' .  (24)

	.  reduce 24


state 48
	expr : smallexpr op expr .  (16)

	.  reduce 16


state 49
	decl : decl ',' NAME .  (12)

	.  reduce 12


state 50
	smallexpr : NAME '(' ids ')' .  (20)

	.  reduce 20


state 51
	ifexpr : IF '(' expr ')' . body elsebody  (29)

	'{'  shift 53
	.  error

	body  goto 54


state 52
	smallexpr : WHILE '(' expr ')' . body  (26)

	'{'  shift 53
	.  error

	body  goto 55


state 53
	body : '{' . bodyexprs '}'  (33)

	OPERATOR  shift 16
	LITERAL  shift 17
	NAME  shift 18
	IF  shift 19
	WHILE  shift 20
	RETURN  shift 22
	'('  shift 23
	.  error

	bodyexprs  goto 56
	expr  goto 57
	smallexpr  goto 26
	ifexpr  goto 27
	op  goto 29


state 54
	ifexpr : IF '(' expr ')' body . elsebody  (29)
	elsebody : .  (30)

	ELSE  shift 58
	ELSIF  shift 59
	OPERATOR  reduce 30
	LITERAL  reduce 30
	NAME  reduce 30
	IF  reduce 30
	WHILE  reduce 30
	RETURN  reduce 30
	'('  reduce 30
	')'  reduce 30
	'}'  reduce 30
	';'  reduce 30

	elsebody  goto 60


state 55
	smallexpr : WHILE '(' expr ')' body .  (26)

	.  reduce 26


state 56
	body : '{' bodyexprs . '}'  (33)
	bodyexprs : bodyexprs . expr ';'  (34)

	OPERATOR  shift 16
	LITERAL  shift 17
	NAME  shift 18
	IF  shift 19
	WHILE  shift 20
	RETURN  shift 22
	'('  shift 23
	'}'  shift 61
	.  error

	expr  goto 62
	smallexpr  goto 26
	ifexpr  goto 27
	op  goto 29


state 57
	bodyexprs : expr . ';'  (35)

	';'  shift 63
	.  error


state 58
	elsebody : ELSE . body  (32)

	'{'  shift 53
	.  error

	body  goto 64


state 59
	elsebody : ELSIF . '(' expr ')' body elsebody  (31)

	'('  shift 65
	.  error


state 60
	ifexpr : IF '(' expr ')' body elsebody .  (29)

	.  reduce 29


state 61
	body : '{' bodyexprs '}' .  (33)

	.  reduce 33


state 62
	bodyexprs : bodyexprs expr . ';'  (34)

	';'  shift 66
	.  error


state 63
	bodyexprs : expr ';' .  (35)

	.  reduce 35


state 64
	elsebody : ELSE body .  (32)

	.  reduce 32


state 65
	elsebody : ELSIF '(' . expr ')' body elsebody  (31)

	OPERATOR  shift 16
	LITERAL  shift 17
	NAME  shift 18
	IF  shift 19
	WHILE  shift 20
	RETURN  shift 22
	'('  shift 23
	.  error

	expr  goto 67
	smallexpr  goto 26
	ifexpr  goto 27
	op  goto 29


state 66
	bodyexprs : bodyexprs expr ';' .  (34)

	.  reduce 34


state 67
	elsebody : ELSIF '(' expr . ')' body elsebody  (31)

	')'  shift 68
	.  error


state 68
	elsebody : ELSIF '(' expr ')' . body elsebody  (31)

	'{'  shift 53
	.  error

	body  goto 69


state 69
	elsebody : ELSIF '(' expr ')' body . elsebody  (31)
	elsebody : .  (30)

	ELSE  shift 58
	ELSIF  shift 59
	OPERATOR  reduce 30
	LITERAL  reduce 30
	NAME  reduce 30
	IF  reduce 30
	WHILE  reduce 30
	RETURN  reduce 30
	'('  reduce 30
	')'  reduce 30
	'}'  reduce 30
	';'  reduce 30

	elsebody  goto 70


state 70
	elsebody : ELSIF '(' expr ')' body elsebody .  (31)

	.  reduce 31


State 18 contains 1 shift/reduce conflict.
State 26 contains 1 shift/reduce conflict.


21 terminals, 17 nonterminals
36 grammar rules, 71 states
